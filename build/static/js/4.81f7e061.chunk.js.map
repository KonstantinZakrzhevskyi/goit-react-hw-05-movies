{"version":3,"sources":["ApiService/settingsUrl.js","ApiService/ApiService.js","utils/status.js","componrnts/IdleView/IdleView.module.css","componrnts/IdleView/searchMovies.png","componrnts/IdleView/IdleView.js","componrnts/ErrorView/ErrorView.js","componrnts/Gallery/Gallery.module.css","componrnts/Gallery/Gallery.js","componrnts/SearchForm/SearchForm.module.css","componrnts/SearchForm/SearchForm.js","views/MoviesPage/MoviesPage.js"],"names":["URL","BASE_URL","KEY","IMAGE","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","Status","IDLE","PENDING","RESOLVED","REJECTED","module","exports","IdleView","className","s","idleView","role","src","searchMovies","alt","width","ErrorView","message","prototype","PropTypes","string","isRequired","Gallery","movies","location","useLocation","gallery","map","movie","galleryItem","id","to","state","from","galleryImage","poster_path","title","name","galleryTitle","SearchForm","onSubmit","useState","setQuery","reset","searchForm","e","preventDefault","trim","toast","error","searchFormInput","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","disabled","searchFormButton","searchFormButtonLabel","func","MoviesPage","setMovies","status","setStatus","useEffect","fetchAPI","then","data","length","results","catch","moviesPage","onsubmit","autoClose"],"mappings":"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","file":"static/js/4.81f7e061.chunk.js","sourcesContent":["export const URL = {\r\n  BASE_URL: `https://api.themoviedb.org/3/`,\r\n  KEY: `648d00fea4c547a3e26795f4c9810267`,\r\n  IMAGE: `https://image.tmdb.org/t/p/w300/`,\r\n};\r\n","import { URL } from './settingsUrl';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found!'));\r\n}\r\n\r\nexport function fetchTrending() {\r\n  return fetchWithErrorHandling(\r\n    `${URL.BASE_URL}trending/movie/day?api_key=${URL.KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchSearchMovies(query) {\r\n  return fetchWithErrorHandling(\r\n    `${URL.BASE_URL}search/movie?api_key=${URL.KEY}&languege=en-US&page=1&include_adult=false&query=${query}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetails(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${URL.BASE_URL}movie/${movieId}?api_key=${URL.KEY}&languedge=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieCast({ movieId }) {\r\n  return fetchWithErrorHandling(\r\n    `${URL.BASE_URL}movie/${movieId}/credits?api_key=${URL.KEY}&languedge=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${URL.BASE_URL}movie/${movieId}/reviews?api_key=${URL.KEY}&languedge=en-US&page=1`,\r\n  );\r\n}\r\n","export const Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"idleView\":\"IdleView_idleView__3vbMc\"};","export default __webpack_public_path__ + \"static/media/searchMovies.7d175769.png\";","import searchMovies from './searchMovies.png';\r\nimport s from './IdleView.module.css';\r\n\r\nfunction IdleView() {\r\n  return (\r\n    <div className={s.idleView} role=\"alert\">\r\n      <img src={searchMovies} alt=\"SearchMovies\" width=\"600\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IdleView;\r\n","import PropTypes from 'prop-types';\r\n// import s from './ErrorView.module.css';\r\n\r\nfunction ErrorView(message) {\r\n  return (\r\n    <div>\r\n      <h2>{message}</h2>\r\n      <h2>404 page not found!</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorView.prototype = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ErrorView;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Gallery_gallery__1qIdi\",\"galleryItem\":\"Gallery_galleryItem__2eogZ\",\"galleryImage\":\"Gallery_galleryImage__1gvEO\",\"galleryTitle\":\"Gallery_galleryTitle__imvu0\"};","import { Link, useLocation } from 'react-router-dom';\r\nimport { URL } from '../../ApiService/settingsUrl';\r\n\r\nimport s from './Gallery.module.css';\r\n\r\nfunction Gallery({ movies }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul className={s.gallery}>\r\n      {movies.map(movie => (\r\n        <li className={s.galleryItem} key={movie.id} id={movie.id}>\r\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n            <img\r\n              className={s.galleryImage}\r\n              src={`${URL.IMAGE}${movie.poster_path}`}\r\n              alt={movie.title || movie.name}\r\n            ></img>\r\n            <h3 className={s.galleryTitle}>{movie.title || movie.name}</h3>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__CTR4X\",\"searchFormInput\":\"SearchForm_searchFormInput__29tps\",\"searchFormButton\":\"SearchForm_searchFormButton__2bn68\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport s from './SearchForm.module.css';\r\n\r\nfunction SearchForm({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      toast.error('Enter request!');\r\n      return;\r\n    }\r\n\r\n    onSubmit(query);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.searchForm} onSubmit={handleSubmit}>\r\n      <input\r\n        className={s.searchFormInput}\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search movies\"\r\n        value={query}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <button type=\"submit\" disabled={!query} className={s.searchFormButton}>\r\n        <span className={s.searchFormButtonLabel}>Search</span>\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nSearchForm.prototype = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchForm;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport * as fetchAPI from '../../ApiService/ApiService';\r\nimport { Status } from '../../utils/status';\r\nimport SearchForm from 'componrnts/SearchForm';\r\nimport Gallery from 'componrnts/Gallery';\r\nimport IdleView from 'componrnts/IdleView';\r\nimport ErrorView from 'componrnts/ErrorView';\r\nimport Loading from 'componrnts/Loader/Loader';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport s from './MoviesPage.module.css';\r\n\r\nfunction MoviesPage() {\r\n  const [query, setQuery] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  useEffect(() => {\r\n    if (!query) return;\r\n    setStatus(Status.PENDING);\r\n\r\n    fetchAPI\r\n      .fetchSearchMovies(query)\r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          throw new Error();\r\n        }\r\n        setMovies(data.results);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch(error => {\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [query]);\r\n\r\n  const onSubmit = query => {\r\n    setQuery(query);\r\n  };\r\n\r\n  if (status === Status.IDLE) {\r\n    return (\r\n      <>\r\n        <SearchForm onSubmit={onSubmit} />\r\n        <IdleView />\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (status === Status.PENDING) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <div className={s.moviesPage}>\r\n        <SearchForm onSubmit={onsubmit} />\r\n        <Gallery movies={movies} />\r\n        <ToastContainer autoClose={3000} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === Status.REJECTED) {\r\n    return <ErrorView message={'No results were found for your search'} />;\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}